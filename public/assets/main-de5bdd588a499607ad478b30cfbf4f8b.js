(function(){var t;t=angular.module("Blog",["ngRoute"]),t.config(["$routeProvider",function(t){return t.when("/post/new",{templateUrl:"../assets/mainCreatePost.html",controller:"CreatePostCtrl"}).when("/post/:postId",{templateUrl:"../assets/mainPost.html",controller:"PostCtrl"}),t.otherwise({templateUrl:"../assets/mainIndex.html",controller:"IndexCtrl"})}]),t.config(["$httpProvider",function(t){return t.defaults.headers.common["X-CSRF-Token"]=$("meta[name=csrf-token]").attr("content")}])}).call(this),function(){}.call(this),function(){angular.module("Blog").factory("postData",["$http",function(t){var o;return o={data:{posts:[{title:"Loading",contents:""}]},isLoaded:!1},o.loadPosts=function(e){return o.isLoaded?e?e.resolve():void 0:t.get("./posts.json").success(function(t){return o.data.posts=t,o.isLoaded=!0,console.log("Successfully loaded posts."),e?e.resolve():void 0}).error(function(){return console.error("Failed to load posts."),e?e.reject("Failed to load posts."):void 0})},o.createPost=function(e){var n;return""===e.newPostTitle||""===e.newPostContents?(alert("Neither the Title nor the Body are allowed to be left blank."),!1):(n={new_post:{title:e.newPostTitle,contents:e.newPostContents}},t.post("./posts.json",n).success(function(t){return o.data.posts.push(t),console.log("Successfully created post.")}).error(function(){return console.error("Failed to create new post.")}),!0)},o}])}.call(this),function(){}.call(this),function(){}.call(this),function(){}.call(this),function(){this.CreatePostCtrl=function(t,o,e){return t.data=e.data,e.loadPosts(null),t.formData={newPostTitle:"",newPostContents:""},t.navNewPost=function(){return o.url("/post/new")},t.navHome=function(){return o.url("/")},t.createPost=function(){return e.createPost(t.formData)},t.clearPost=function(){return t.formData.newPostTitle="",t.formData.newPostContents=""}},this.CreatePostCtrl.$inject=["$scope","$location","postData"]}.call(this),function(){this.IndexCtrl=function(t,o,e,n){return t.data=n.data,n.loadPosts(null),t.viewPost=function(t){return o.url("/post/"+t)},t.navNewPost=function(){return o.url("/post/new")}},this.IndexCtrl.$inject=["$scope","$location","$http","postData"]}.call(this),function(){this.PostCtrl=function(t,o,e,n,s){return t.data={postData:s.data,currentPost:{title:"Loading...",contents:""}},t.data.postId=o.postId,t.prepPostData=function(){var o;return o=_.findWhere(s.data.posts,{id:parseInt(t.data.postId)}),t.data.currentPost.title=o.title,t.data.currentPost.contents=o.contents},t.navNewPost=function(){return e.url("/post/new")},t.navHome=function(){return e.url("/")},this.deferred=n.defer(),this.deferred.promise.then(t.prepPostData),s.loadPosts(this.deferred)},this.PostCtrl.$inject=["$scope","$routeParams","$location","$q","postData"]}.call(this),function(){}.call(this),function(){}.call(this);